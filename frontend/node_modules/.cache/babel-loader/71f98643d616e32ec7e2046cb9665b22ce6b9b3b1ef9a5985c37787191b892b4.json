{"ast":null,"code":"import axios from'axios';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';const api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'}});// Add request interceptor to add auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{console.error('Request error:',error);return Promise.reject(error);});// Add response interceptor for better error handling\napi.interceptors.response.use(response=>response,error=>{var _error$response,_error$response2;console.error('API Error:',{status:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status,data:(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data,message:error.message});if(!error.response){// Network error or server not responding\nreturn Promise.reject({message:'Unable to connect to server. Please check your internet connection.'});}if(error.response.status===401){// Clear token and redirect to login on auth error\nlocalStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error.response.data||error);});// Auth endpoints\nexport const login=async(username,password)=>{try{const formData=new URLSearchParams();formData.append('username',username);formData.append('password',password);const response=await api.post('/api/auth/token',formData,{headers:{'Content-Type':'application/x-www-form-urlencoded'}});return response.data;}catch(error){console.error('Login error:',error);throw error;}};export const register=async userData=>{try{const response=await api.post('/api/auth/register',userData);return response.data;}catch(error){console.error('Registration error:',error);throw error;}};// User endpoints\nexport const getCurrentUser=async()=>{const response=await api.get('/api/users/me');return response.data;};export const updateUser=async data=>{try{const formData=new FormData();// Add text fields\nObject.entries(data).forEach(_ref=>{let[key,value]=_ref;if(key!=='profile_image'&&value!==undefined&&value!==null){formData.append(key,value.toString());}});// Add profile image if present\nif(data.profile_image){formData.append('profile_image',data.profile_image);}const response=await api.put('/api/users/me',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}catch(error){console.error('Update user error:',error);throw error;}};// Event endpoints\nexport const getEvents=async()=>{try{const response=await api.get('/api/events');return response.data;}catch(error){console.error('Get events error:',error);throw error;}};export const getMyEvents=async()=>{try{const response=await api.get('/api/events/my-events');return response.data;}catch(error){console.error('Get my events error:',error);throw error;}};export const createEvent=async eventData=>{try{const response=await api.post('/api/events',eventData);return response.data;}catch(error){console.error('Create event error:',error);throw error;}};export const registerForEvent=async function(eventId){let isWithdraw=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;try{const response=await api.post(\"/api/events/\".concat(eventId,\"/register?is_withdraw=\").concat(isWithdraw));return response.data;}catch(error){console.error('Register for event error:',error);throw error;}};export const cancelEvent=async eventId=>{try{const response=await api.delete(\"/api/events/\".concat(eventId));return response.data;}catch(error){console.error('Cancel event error:',error);throw error;}};export default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","console","Promise","reject","response","_error$response","_error$response2","status","data","message","removeItem","window","location","href","login","username","password","formData","URLSearchParams","append","post","register","userData","getCurrentUser","get","updateUser","FormData","Object","entries","forEach","_ref","key","value","undefined","toString","profile_image","put","getEvents","getMyEvents","createEvent","eventData","registerForEvent","eventId","isWithdraw","arguments","length","cancelEvent","delete"],"sources":["C:/Users/Admin/Documents/RacketBuddy/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { AuthResponse, Event, EventRegistration, LoginCredentials, RegisterData, User, Sex, TennisLevel, UpdateUserData } from '../types';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor for better error handling\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    console.error('API Error:', {\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n      message: error.message\r\n    });\r\n    \r\n    if (!error.response) {\r\n      // Network error or server not responding\r\n      return Promise.reject({\r\n        message: 'Unable to connect to server. Please check your internet connection.'\r\n      });\r\n    }\r\n    \r\n    if (error.response.status === 401) {\r\n      // Clear token and redirect to login on auth error\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    \r\n    return Promise.reject(error.response.data || error);\r\n  }\r\n);\r\n\r\n// Auth endpoints\r\nexport const login = async (username: string, password: string): Promise<AuthResponse> => {\r\n  try {\r\n    const formData = new URLSearchParams();\r\n    formData.append('username', username);\r\n    formData.append('password', password);\r\n\r\n    const response = await api.post('/api/auth/token', formData, {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n    });\r\n    \r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Login error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const register = async (userData: {\r\n  email: string;\r\n  password: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  date_of_birth: string;\r\n  sex: Sex;\r\n  tennis_level: TennisLevel;\r\n}): Promise<User> => {\r\n  try {\r\n    const response = await api.post('/api/auth/register', userData);\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Registration error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// User endpoints\r\nexport const getCurrentUser = async (): Promise<User> => {\r\n  const response = await api.get<User>('/api/users/me');\r\n  return response.data;\r\n};\r\n\r\nexport const updateUser = async (data: UpdateUserData): Promise<User> => {\r\n  try {\r\n    const formData = new FormData();\r\n    \r\n    // Add text fields\r\n    Object.entries(data).forEach(([key, value]) => {\r\n      if (key !== 'profile_image' && value !== undefined && value !== null) {\r\n        formData.append(key, value.toString());\r\n      }\r\n    });\r\n    \r\n    // Add profile image if present\r\n    if (data.profile_image) {\r\n      formData.append('profile_image', data.profile_image);\r\n    }\r\n    \r\n    const response = await api.put<User>('/api/users/me', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Update user error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Event endpoints\r\nexport const getEvents = async (): Promise<Event[]> => {\r\n  try {\r\n    const response = await api.get<Event[]>('/api/events');\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Get events error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getMyEvents = async (): Promise<Event[]> => {\r\n  try {\r\n    const response = await api.get<Event[]>('/api/events/my-events');\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Get my events error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createEvent = async (eventData: {\r\n  court_location: string;\r\n  event_date: string;\r\n  event_time: string;\r\n  max_participants: number;\r\n}): Promise<Event> => {\r\n  try {\r\n    const response = await api.post('/api/events', eventData);\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Create event error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const registerForEvent = async (eventId: number, isWithdraw: boolean = false): Promise<EventRegistration | { message: string }> => {\r\n  try {\r\n    const response = await api.post<EventRegistration | { message: string }>(`/api/events/${eventId}/register?is_withdraw=${isWithdraw}`);\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Register for event error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const cancelEvent = async (eventId: number): Promise<void> => {\r\n  try {\r\n    const response = await api.delete(`/api/events/${eventId}`);\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Cancel event error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}