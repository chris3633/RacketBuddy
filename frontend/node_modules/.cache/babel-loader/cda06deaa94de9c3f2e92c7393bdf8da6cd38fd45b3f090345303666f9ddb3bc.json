{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\RacketBuddy\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { login as apiLogin, register as apiRegister, getCurrentUser } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  useEffect(() => {\n    const fetchUser = async () => {\n      if (token) {\n        try {\n          const userData = await getCurrentUser();\n          setUser(userData);\n        } catch (error) {\n          console.error('Failed to fetch user:', error);\n          logout();\n        }\n      }\n    };\n    fetchUser();\n  }, [token]);\n  const login = async (email, password) => {\n    const response = await apiLogin(email, password);\n    setToken(response.access_token);\n    localStorage.setItem('token', response.access_token);\n    const userData = await getCurrentUser();\n    setUser(userData);\n  };\n  const register = async data => {\n    await apiRegister(data);\n    await login(data.email, data.password);\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      register,\n      logout,\n      isAuthenticated: !!token\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Z6Vnyj+tvkpOopJdPBR2TDv1n60=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","login","apiLogin","register","apiRegister","getCurrentUser","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","fetchUser","userData","error","console","logout","email","password","response","access_token","setItem","data","removeItem","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/RacketBuddy/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { User } from '../types';\r\nimport { login as apiLogin, register as apiRegister, getCurrentUser } from '../services/api';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  token: string | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (data: any) => Promise<void>;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(localStorage.getItem('token'));\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      if (token) {\r\n        try {\r\n          const userData = await getCurrentUser();\r\n          setUser(userData);\r\n        } catch (error) {\r\n          console.error('Failed to fetch user:', error);\r\n          logout();\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchUser();\r\n  }, [token]);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    const response = await apiLogin(email, password);\r\n    setToken(response.access_token);\r\n    localStorage.setItem('token', response.access_token);\r\n    const userData = await getCurrentUser();\r\n    setUser(userData);\r\n  };\r\n\r\n  const register = async (data: any) => {\r\n    await apiRegister(data);\r\n    await login(data.email, data.password);\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        token,\r\n        login,\r\n        register,\r\n        logout,\r\n        isAuthenticated: !!token,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE7E,SAASC,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,IAAIC,WAAW,EAAEC,cAAc,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW7F,MAAMC,WAAW,gBAAGX,aAAa,CAA8BY,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAgBkB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAEhFlB,SAAS,CAAC,MAAM;IACd,MAAMmB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIJ,KAAK,EAAE;QACT,IAAI;UACF,MAAMK,QAAQ,GAAG,MAAMf,cAAc,CAAC,CAAC;UACvCS,OAAO,CAACM,QAAQ,CAAC;QACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7CE,MAAM,CAAC,CAAC;QACV;MACF;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,MAAMd,KAAK,GAAG,MAAAA,CAAOuB,KAAa,EAAEC,QAAgB,KAAK;IACvD,MAAMC,QAAQ,GAAG,MAAMxB,QAAQ,CAACsB,KAAK,EAAEC,QAAQ,CAAC;IAChDT,QAAQ,CAACU,QAAQ,CAACC,YAAY,CAAC;IAC/BV,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAACC,YAAY,CAAC;IACpD,MAAMP,QAAQ,GAAG,MAAMf,cAAc,CAAC,CAAC;IACvCS,OAAO,CAACM,QAAQ,CAAC;EACnB,CAAC;EAED,MAAMjB,QAAQ,GAAG,MAAO0B,IAAS,IAAK;IACpC,MAAMzB,WAAW,CAACyB,IAAI,CAAC;IACvB,MAAM5B,KAAK,CAAC4B,IAAI,CAACL,KAAK,EAAEK,IAAI,CAACJ,QAAQ,CAAC;EACxC,CAAC;EAED,MAAMF,MAAM,GAAGA,CAAA,KAAM;IACnBT,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,IAAI,CAAC;IACdC,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAED,oBACEvB,OAAA,CAACC,WAAW,CAACuB,QAAQ;IACnBC,KAAK,EAAE;MACLnB,IAAI;MACJE,KAAK;MACLd,KAAK;MACLE,QAAQ;MACRoB,MAAM;MACNU,eAAe,EAAE,CAAC,CAAClB;IACrB,CAAE;IAAAJ,QAAA,EAEDA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzB,EAAA,CArDWF,YAAqD;AAAA4B,EAAA,GAArD5B,YAAqD;AAuDlE,OAAO,MAAM6B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG3C,UAAU,CAACU,WAAW,CAAC;EACvC,IAAIiC,OAAO,KAAKhC,SAAS,EAAE;IACzB,MAAM,IAAIiC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}