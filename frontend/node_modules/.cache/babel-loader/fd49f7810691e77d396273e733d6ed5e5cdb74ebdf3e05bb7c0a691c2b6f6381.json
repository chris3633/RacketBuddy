{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for better error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2;\n  console.error('API Error:', {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n    message: error.message\n  });\n  if (!error.response) {\n    // Network error or server not responding\n    return Promise.reject({\n      message: 'Unable to connect to server. Please check your internet connection.'\n    });\n  }\n  if (error.response.status === 401) {\n    // Clear token and redirect to login on auth error\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error.response.data || error);\n});\n\n// Auth endpoints\nexport const login = async (username, password) => {\n  try {\n    const formData = new URLSearchParams();\n    formData.append('username', username);\n    formData.append('password', password);\n    const response = await api.post('/api/auth/token', formData, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error;\n  }\n};\nexport const register = async userData => {\n  try {\n    const response = await api.post('/api/auth/register', userData);\n    return response.data;\n  } catch (error) {\n    console.error('Registration error:', error);\n    throw error;\n  }\n};\n\n// User endpoints\nexport const getCurrentUser = async () => {\n  const response = await api.get('/api/users/me');\n  return response.data;\n};\nexport const updateUser = async data => {\n  try {\n    const formData = new FormData();\n\n    // Add text fields\n    Object.entries(data).forEach(([key, value]) => {\n      if (key !== 'profile_image' && value !== undefined) {\n        formData.append(key, value.toString());\n      }\n    });\n\n    // Add profile image if present\n    if (data.profile_image) {\n      formData.append('profile_image', data.profile_image);\n    }\n    const response = await api.put('/api/users/me', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Update user error:', error);\n    throw error;\n  }\n};\n\n// Event endpoints\nexport const getEvents = async () => {\n  try {\n    const response = await api.get('/api/events');\n    return response.data;\n  } catch (error) {\n    console.error('Get events error:', error);\n    throw error;\n  }\n};\nexport const getMyEvents = async () => {\n  try {\n    const response = await api.get('/api/events/my-events');\n    return response.data;\n  } catch (error) {\n    console.error('Get my events error:', error);\n    throw error;\n  }\n};\nexport const createEvent = async eventData => {\n  try {\n    const response = await api.post('/api/events', eventData);\n    return response.data;\n  } catch (error) {\n    console.error('Create event error:', error);\n    throw error;\n  }\n};\nexport const registerForEvent = async (eventId, isWithdraw = false) => {\n  try {\n    const response = await api.post(`/api/events/${eventId}/register?is_withdraw=${isWithdraw}`);\n    return response.data;\n  } catch (error) {\n    console.error('Register for event error:', error);\n    throw error;\n  }\n};\nexport const cancelEvent = async eventId => {\n  try {\n    const response = await api.delete(`/api/events/${eventId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Cancel event error:', error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","console","Promise","reject","response","_error$response","_error$response2","status","data","message","removeItem","window","location","href","login","username","password","formData","URLSearchParams","append","post","register","userData","getCurrentUser","get","updateUser","FormData","Object","entries","forEach","key","value","undefined","toString","profile_image","put","getEvents","getMyEvents","createEvent","eventData","registerForEvent","eventId","isWithdraw","cancelEvent","delete"],"sources":["C:/Users/Admin/Documents/RacketBuddy/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { AuthResponse, Event, EventRegistration, LoginCredentials, RegisterData, User, Sex, TennisLevel } from '../types';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor for better error handling\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    console.error('API Error:', {\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n      message: error.message\r\n    });\r\n    \r\n    if (!error.response) {\r\n      // Network error or server not responding\r\n      return Promise.reject({\r\n        message: 'Unable to connect to server. Please check your internet connection.'\r\n      });\r\n    }\r\n    \r\n    if (error.response.status === 401) {\r\n      // Clear token and redirect to login on auth error\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    \r\n    return Promise.reject(error.response.data || error);\r\n  }\r\n);\r\n\r\n// Auth endpoints\r\nexport const login = async (username: string, password: string): Promise<AuthResponse> => {\r\n  try {\r\n    const formData = new URLSearchParams();\r\n    formData.append('username', username);\r\n    formData.append('password', password);\r\n\r\n    const response = await api.post('/api/auth/token', formData, {\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n    });\r\n    \r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Login error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const register = async (userData: {\r\n  email: string;\r\n  password: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  date_of_birth: string;\r\n  sex: Sex;\r\n  tennis_level: TennisLevel;\r\n}): Promise<User> => {\r\n  try {\r\n    const response = await api.post('/api/auth/register', userData);\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Registration error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// User endpoints\r\nexport const getCurrentUser = async (): Promise<User> => {\r\n  const response = await api.get<User>('/api/users/me');\r\n  return response.data;\r\n};\r\n\r\nexport const updateUser = async (data: Partial<User> & { profile_image?: File | null }): Promise<User> => {\r\n  try {\r\n    const formData = new FormData();\r\n    \r\n    // Add text fields\r\n    Object.entries(data).forEach(([key, value]) => {\r\n      if (key !== 'profile_image' && value !== undefined) {\r\n        formData.append(key, value.toString());\r\n      }\r\n    });\r\n    \r\n    // Add profile image if present\r\n    if (data.profile_image) {\r\n      formData.append('profile_image', data.profile_image);\r\n    }\r\n    \r\n    const response = await api.put<User>('/api/users/me', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Update user error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Event endpoints\r\nexport const getEvents = async (): Promise<Event[]> => {\r\n  try {\r\n    const response = await api.get<Event[]>('/api/events');\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Get events error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getMyEvents = async (): Promise<Event[]> => {\r\n  try {\r\n    const response = await api.get<Event[]>('/api/events/my-events');\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Get my events error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createEvent = async (eventData: {\r\n  court_location: string;\r\n  event_date: string;\r\n  event_time: string;\r\n  max_participants: number;\r\n}): Promise<Event> => {\r\n  try {\r\n    const response = await api.post('/api/events', eventData);\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Create event error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const registerForEvent = async (eventId: number, isWithdraw: boolean = false): Promise<EventRegistration | { message: string }> => {\r\n  try {\r\n    const response = await api.post<EventRegistration | { message: string }>(`/api/events/${eventId}/register?is_withdraw=${isWithdraw}`);\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Register for event error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const cancelEvent = async (eventId: number): Promise<void> => {\r\n  try {\r\n    const response = await api.delete(`/api/events/${eventId}`);\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error('Cancel event error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}