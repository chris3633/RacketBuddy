{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    console.error('API Error:', error.response.data);\n    return Promise.reject(error.response.data);\n  } else if (error.request) {\n    // The request was made but no response was received\n    console.error('No response received:', error.request);\n    return Promise.reject(new Error('No response from server'));\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    console.error('Request setup error:', error.message);\n    return Promise.reject(error);\n  }\n});\n\n// Auth endpoints\nexport const login = async credentials => {\n  const formData = new URLSearchParams();\n  formData.append('username', credentials.username);\n  formData.append('password', credentials.password);\n  const response = await api.post('/api/auth/token', formData, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  });\n  return response.data;\n};\nexport const register = async data => {\n  const response = await api.post('/api/auth/register', data);\n  return response.data;\n};\n\n// User endpoints\nexport const getCurrentUser = async () => {\n  const response = await api.get('/api/users/me');\n  return response.data;\n};\nexport const updateUser = async data => {\n  const response = await api.put('/api/users/me', data);\n  return response.data;\n};\n\n// Event endpoints\nexport const getEvents = async () => {\n  const response = await api.get('/api/events');\n  return response.data;\n};\nexport const getMyEvents = async () => {\n  const response = await api.get('/api/events/my-events');\n  return response.data;\n};\nexport const createEvent = async data => {\n  const response = await api.post('/api/events', data);\n  return response.data;\n};\nexport const registerForEvent = async eventId => {\n  const response = await api.post(`/api/events/${eventId}/register`);\n  return response.data;\n};\nexport const cancelEvent = async eventId => {\n  await api.delete(`/api/events/${eventId}`);\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","console","data","Promise","reject","Error","message","login","credentials","formData","URLSearchParams","append","username","password","post","register","getCurrentUser","get","updateUser","put","getEvents","getMyEvents","createEvent","registerForEvent","eventId","cancelEvent","delete"],"sources":["C:/Users/Admin/Documents/RacketBuddy/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { AuthResponse, Event, EventRegistration, LoginCredentials, RegisterData, User } from '../types';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests if it exists\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Add response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      console.error('API Error:', error.response.data);\r\n      return Promise.reject(error.response.data);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.error('No response received:', error.request);\r\n      return Promise.reject(new Error('No response from server'));\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.error('Request setup error:', error.message);\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n);\r\n\r\n// Auth endpoints\r\nexport const login = async (credentials: LoginCredentials): Promise<AuthResponse> => {\r\n  const formData = new URLSearchParams();\r\n  formData.append('username', credentials.username);\r\n  formData.append('password', credentials.password);\r\n  \r\n  const response = await api.post<AuthResponse>('/api/auth/token', formData, {\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const register = async (data: RegisterData): Promise<User> => {\r\n  const response = await api.post<User>('/api/auth/register', data);\r\n  return response.data;\r\n};\r\n\r\n// User endpoints\r\nexport const getCurrentUser = async (): Promise<User> => {\r\n  const response = await api.get<User>('/api/users/me');\r\n  return response.data;\r\n};\r\n\r\nexport const updateUser = async (data: Partial<User>): Promise<User> => {\r\n  const response = await api.put<User>('/api/users/me', data);\r\n  return response.data;\r\n};\r\n\r\n// Event endpoints\r\nexport const getEvents = async (): Promise<Event[]> => {\r\n  const response = await api.get<Event[]>('/api/events');\r\n  return response.data;\r\n};\r\n\r\nexport const getMyEvents = async (): Promise<Event[]> => {\r\n  const response = await api.get<Event[]>('/api/events/my-events');\r\n  return response.data;\r\n};\r\n\r\nexport const createEvent = async (data: Omit<Event, 'id' | 'is_cancelled' | 'created_at' | 'organizer_id'>): Promise<Event> => {\r\n  const response = await api.post<Event>('/api/events', data);\r\n  return response.data;\r\n};\r\n\r\nexport const registerForEvent = async (eventId: number): Promise<EventRegistration> => {\r\n  const response = await api.post<EventRegistration>(`/api/events/${eventId}/register`);\r\n  return response.data;\r\n};\r\n\r\nexport const cancelEvent = async (eventId: number): Promise<void> => {\r\n  await api.delete(`/api/events/${eventId}`);\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}